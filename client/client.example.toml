##############################################################################
#
#   Nimiq core-rs example configuration file
#
#   Copy this to client.toml and edit appropriately.
#
#   The client will look for this config file in:
#    * './' (current directory)
#    * '$HOME/.config/nimiq'
#
##############################################################################



##############################################################################
#
# Network specific configuration
#
##############################################################################

[network]

# Configure hostname/IP address to announce to the network.
# If the protocol is "wss", this must be a FQDN pointing to this node.
# Possible values: any fully-qualified domain name or IP address (latter only for protocol "ws").
host = "my.domain"

# Specifies which port to listen on for connections.
# Possible values: any valid port number
# Default: 8443.
#port = 8443

# Configure the protocol to be used. Options are:
# - "wss": Requires host, port, and TLS certificate to be set.
# - "ws": Only requires host (can be an IP address) and port to be set.
# Possible values: "wss", "ws"
# Default: "ws"
#protocol = "ws"

# Details of additional seed node.
# NOTE: Seed nodes without public key are currently not supported.
#
#seed_nodes = [
#	# Add seed nodes from list (e.g. community seed nodes). The public key specified is used to verify the signature of the file.
#	{ list = "https://nimiq.community/seeds.txt", public_key = "e65e39616662f2c16d62dc08915e5a1d104619db8c2b9cf9b389f96c8dce9837" },
#	# Specify a Wss seed node with hostname, port (optional) and peer_id (optional), or public_key (optional).
#	{ host = "seed-15.nimiq-network.com", port = 8443, peer_id = "c705843de04503656f4965a6672e70f0" },
#	# Specify seed node using a peer's URI. The last URI segment must be the public key, not the fingerprint.
#	{ uri = "wss://seed-17.nimiq.com:8443/f1240638c6dd670467f22a04b58f7740" }
#]

# User Agent
#
# String that describes what kind of node is running.
#
# Default: Generated from version, operating system and processor architecture
#user_agent = "core-rs/0.1.0 (native; linux x86_64)"



##############################################################################
#
# Identity file (PCKS#12) and password for private key
#
##############################################################################
#[network.tls]
#identity_file = "./my.domain.p12"
#identity_password = "secret"



##############################################################################
#
# Consensus specific configuration
#
##############################################################################

[consensus]

# Specify the network to connect to.
# Possible values: "main", "test", "dev"
# Default: "main"
#network = "main"



##############################################################################
#
# Configure the JSON-RPC server.
#
# To enable, uncomment the section header '[rpc-server]'
#
#
#
##############################################################################

# Uncomment the following line to enable the RPC server.
#[rpc-server]

# Bind the RPC server to specified IP
# Default: 127.0.0.1
#bind="127.0.0.1"

# TCP-Port to use to create a listening socket for the JSON-RPC server.
# Possible values: any valid port number
# Default: 8648
#port = 8648

# Allow only the RPC methods listed here. All methods are allowed if this is empty.
# Example: ["getBlockByNumber", "peerCount"],
# Default: []
#methods = []

# Declare a username and password required to access the JSON-RPC server.
# Default: none
#username = "super"
# Default: none
#password = "secret"



##############################################################################
#
# Configure Prometheus-compatible metrics server.
#
##############################################################################

# Uncomment the following line to enable the metrics server.
#[metrics-server]

# Bind the RPC server to specified IP
# Default: 127.0.0.1
#bind="127.0.0.1"

# TCP-Port to use to create a listening socket for the metrics server.
# Possible values: any valid port number
# Default: 8649
#port = 8649

# Declare a password required to access the metrics server.
# Default: none
#password = "secret"



##############################################################################
#
# Configure support to run this node behind a reverse proxy.
#
##############################################################################

# Uncomment the following line to enable reverse proxy support.
#[reverse-proxy]
# TCP-Port where the reverse proxy is listening.
# Possible values: any valid port number
# Default: 8444
#port = 8443

# IP address of the reverse proxy that this node will "see".
# Possible values: any valid IP address
# Default: "::ffff:127.0.0.1"
#address = "::ffff:192.168.10.40"

# HTTP header where the reverse proxy will send the original IP address of the connecting client.
# Possible values: any valid HTTP header name
# Default: "x-forwarded-for"
#header = "x-forwarded-for"

# Determines whether the reverse proxy does TLS termination for this node.
# In that case, we want to advertise our peer address as web socket secure.
# So if your reverse proxy does the TLS and forwards an unencrypred websocket connection, set this to true and set the
# network protocol to 'ws'.
#
# Default: false
#with_tls_termination = true



##############################################################################
#
# Configure log output.
#
##############################################################################

[log]
# Configure global log level.
# Possible values: "trace", "debug", "info", "warning", "error"
# Default: "info"
level = "debug"

# Define specific log levels for tags.
# Default: none
#tags = { BaseConsensus = "debug" }

# Specify whether timestamps should be included for log statements.
# Default: false
#timestamps = true

# Save log output to a file.
# If not specified, log to stdout.
# Default: none
#file = "nimiq-client.log"



##############################################################################
##
## Configure mempool
##
###############################################################################

[mempool]

# Configure max size of transaction black list
# Default: 25000
#blacklist_limit = 25000

# Rules to filter certain transaction
#[mempool.filter]
#tx_fee = 0
#tx_fee_per_byte = 0
#tx_value = 0
#tx_value_total = 0
#contract_fee = 0
#contract_fee_per_byte = 0
#contract_value = 0
#creation_fee = 0
#creation_fee_per_byte = 0
#creation_value = 0
#sender_balance = 0
#recipient_balance = 0
