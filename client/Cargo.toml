[package]
name = "nimiq-client"
version = "0.1.0"
authors = ["The Nimiq Core Development Team <info@nimiq.com>"]
edition = "2018"
description = "Nimiq's Rust client"
homepage = "https://nimiq.com"
repository = "https://github.com/nimiq/core-rs"
license = "Apache-2.0"
categories = ["cryptography::cryptocurrencies"]
keywords = ["nimiq", "cryptocurrency", "blockchain"]
exclude = ["db", "peer_key.dat"]

[badges]
gitlab = { repository = "nimiq/core-rs", branch = "master" }
travis-ci = { repository = "nimiq/core-rs", branch = "master" }
is-it-maintained-issue-resolution = { repository = "nimiq/core-rs" }
is-it-maintained-open-issues = { repository = "nimiq/core-rs" }
maintenance = { status = "experimental" }

[dependencies]
serde = "1.0"
serde_derive = "1.0"
toml = "0.5"
log = "0.4"
fern = { version = "0.5", features = ["colored"] }
futures = "0.1"
tokio = "0.1"
lazy_static = "1.2"
parking_lot = { version = "0.7", optional = true, features = ["deadlock_detection"] }
clap = "2.32"
colored = "1.7"
chrono = "0.4"
failure = "0.1"
url = "1.7"
hex = "0.3"
directories = "1.0"
human-panic = { version = "1.0", optional = true }
log-panics = { version = "2.0", features = ["with-backtrace"] }
nimiq-database = { path = "../database", version = "0.1" }
nimiq-network = { path = "../network", version = "0.1" }
nimiq-primitives = { path = "../primitives", version = "0.1", features = ["networks", "coin"] }
nimiq-network-primitives = { path = "../network-primitives", version = "0.1" }
nimiq-rpc-server = { path = "../rpc-server", version = "0.1", optional = true }
nimiq-metrics-server = { path = "../metrics-server", version = "0.1", optional = true }
nimiq-mempool = { path = "../mempool", version = "0.1" }
nimiq-lib = { path = "../lib", version = "0.1" }
nimiq-keys = { path = "../keys", version = "0.1" }

[features]
default = ["all"]
all = ["rpc-server", "metrics-server", "deadlock-detection", "human-panic"]
rpc-server = ["nimiq-rpc-server"]
metrics-server = ["nimiq-metrics-server"]
deadlock-detection = ["parking_lot"]
system-install = []